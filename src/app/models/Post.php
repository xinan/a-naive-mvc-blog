<?php 

/**
 * Model Post
 *
 * A Post have the following attributes: 
 * id, title, body, author, created, updated
 *
 * Among this, the 'id', 'created' and 'updated' columns are automatically generated by the database
 * Thus, when constructing a new post, these attributes need not to be created in params
 */
class Post extends Model {
	
	// the name of table in database
	public static $table = 'posts';

	function __construct() {
		$this->set('title', '');
		$this->set('body', '');
		$this->set('author', '');
	}

	/**
	 * Function getAuthor
	 *
	 * @return the User object of the author
	 * Different from get('author'), get('author') only returns the uid of the author
	 */
	public function getAuthor() {
		$author = User::find($this->get('author'));
		return $author;
	}

	/**
	 * Function getDate
	 *
	 * @return a string describing the created and updated date of a post
	 */
	public function getDate() {
		$created = date("F j, Y, g:i a", strtotime($this->get('created')));
		$updated = date("F j, Y, g:i a", strtotime($this->get('updated')));
		$meta = $created;
		if ($this->get('updated') != '0000-00-00 00:00:00') {
			$meta .= ' (Updated on ' . $updated . ')';
		}
		return $meta;
	}

	/**
	 * Function getAbstract
	 *
	 * @return an abstract of the post
	 */
	public function getAbstract() {
		$text = strip_tags($this->getMarkup());
		if (strlen($text) < 300) {
			return $text;
		} else {
			preg_match('/^.*\s/', substr($text, 0, 300), $matches);
			$abstract = $matches[0] . (strlen($text) > strlen($matches[0]) ? '&hellip;' : '');
			return $abstract;
		}
	}

  /**
   * Function getMarkup
   *
   * Decodes the html special characters
   * @return html markup of the post
   */
  public function getMarkup() {
  	return htmlspecialchars_decode($this->get('body'));
  }

}
